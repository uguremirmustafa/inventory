// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: item_type.sql

package db

import (
	"context"
)

const createItemType = `-- name: CreateItemType :exec
insert into item_type ("name") values ($1)
`

func (q *Queries) CreateItemType(ctx context.Context, name string) error {
	_, err := q.db.ExecContext(ctx, createItemType, name)
	return err
}

const listItemTypes = `-- name: ListItemTypes :many
SELECT id, name, created_at, updated_at, deleted_at FROM item_type
`

func (q *Queries) ListItemTypes(ctx context.Context) ([]ItemType, error) {
	rows, err := q.db.QueryContext(ctx, listItemTypes)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ItemType
	for rows.Next() {
		var i ItemType
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.CreatedAt,
			&i.UpdatedAt,
			&i.DeletedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
